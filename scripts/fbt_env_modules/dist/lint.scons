Import("FW_ENV", "DIST_ENV")
distenv, firmware_env = DIST_ENV, FW_ENV


# Linter
distenv.PhonyTarget(
    "lint",
    [
        [
            "${PYTHON3}",
            "${FBT_SCRIPT_DIR}/lint.py",
            "check",
            "${LINT_SOURCES}",
            "${ARGS}",
        ]
    ],
    LINT_SOURCES=[n for n in firmware_env["LINT_SOURCES"]],
)

distenv.PhonyTarget(
    "format",
    [
        [
            "${PYTHON3}",
            "${FBT_SCRIPT_DIR}/lint.py",
            "format",
            "${LINT_SOURCES}",
            "${ARGS}",
        ]
    ],
    LINT_SOURCES=[n.srcnode() for n in firmware_env["LINT_SOURCES"]],
)

# PY_LINT_SOURCES contains recursively-built modules' SConscript files
# Here we add additional Python files residing in repo root
firmware_env.Append(
    PY_LINT_SOURCES=[
        # Py code folders
        "site_scons",
        "scripts",
        "applications",
        "applications_user",
        "assets",
        "targets",
        # Extra files
        "SConstruct",
        "firmware.scons",
        "fbt_options.py",
    ]
)


black_commandline = [
    [
        "@${PYTHON3}",
        "-m",
        "black",
        "${PY_BLACK_ARGS}",
        "${PY_LINT_SOURCES}",
        "${ARGS}",
    ]
]
black_base_args = [
    "--include",
    '"(\\.scons|\\.py|SConscript|SConstruct|\\.fam)$"',
]

distenv.PhonyTarget(
    "lint_py",
    black_commandline,
    PY_BLACK_ARGS=[
        "--check",
        "--diff",
        *black_base_args,
    ],
    PY_LINT_SOURCES=firmware_env["PY_LINT_SOURCES"],
)

distenv.PhonyTarget(
    "format_py",
    black_commandline,
    PY_BLACK_ARGS=black_base_args,
    PY_LINT_SOURCES=firmware_env["PY_LINT_SOURCES"],
)
